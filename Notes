


	Fields that have a plus sign next to the use coccon to allow the use to add more than one field set


	Users
		create scoped views for
		Admin
			Hold Off for Now

/***######### DEMARCATED ZONE A #########***/

		Employer(complete??)
			logo
			company name(references company)
			email(sign up)
			phone
			office line

		Company (DONE SCAFFOLD)
			name
			industry
			nssf
			nhif
			kra-pin

		branch (+ on company) (DONE SCAFFOLD)
			branch_name
			contact_person 
			role
			box_number
			size 
			phone 
			email 
			building
			street
			county (references location)
			constituency (references location)
			ward (references location)
			town (references location)

/***######### DEMARCATED ZONE A #########***/
			

/***######### DEMARCATED ZONE B #########***/

		User
			picture
			first_name
			surname
			last_name
			email_address
			phone
			id_number

			marital_status
			gender(boolean)
			date_of_birth

			availability(down carret)
			expected_salary
			location(references)-(district, division, ward, location, sublocation, village)
			
			bio
			linkedin
			skype
			twitter
			google_plus
			
			

		(cocoon fields)
		Reference
			name
			company (fills in a new company or allows selection from existing company.)
			email
			phone
		Educational Background +
			school_name + (fill with people from only uon, separate model?)
			details
		Work Experience +
			institution 
			Details
		Projects +
			project_name 
			client
			date_completed
			contributions(%)
		Awards & Distinctions +
			award_name
			details
			upload_certificate
		Availability
			job_category_id (pull categories)
			exp_years
			industry
			preferred location (location id)
			salary expectation
			work type
			availability

/***######### DEMARCATED ZONE B #########***/


UFILTERED THOUGHTS
	Saved Jobs
	Employer with many jobs filter


DONE SCAFFOLDS
	Job
		title
		posted_on(created_at)
		closes_on(date)
		job_category(references)
		location(references)
		logo
		cv
		details
		salary_range(implement like dates)
		responsibilities
		qualifications
		email
		company
		type
	
	Job Category
		name

	Location(look at the fields from users ???)
		county
		district
		division(depends on district)
		ward
		location
		sublocation
		village
		town
	
##########################################
User Model
class User < ApplicationRecord
  #rolify
has_attached_file :avatar, styles: { medium: "300x300>", thumb: "100x100>" }, default_url: "/assets/avatar-1-xl.jpg"
validates_attachment_content_type :avatar, content_type: /\Aimage\/.*\z/

devise :database_authenticatable, :registerable,          
:recoverable, :rememberable, :trackable, :validatable   

#can and can
#load_and_authorize_resource

has_many :jobs, dependent: :destroy
has_many :job_categories, dependent: :destroy
has_many :companies, dependent: :destroy

has_many :counties, dependent: :destroy
has_many :constituencies, dependent: :destroy
has_many :districts, dependent: :destroy
has_many :divisions, dependent: :destroy
has_many :wards, dependent: :destroy
has_many :locations, dependent: :destroy
has_many :sublocations, dependent: :destroy
has_many :villages, dependent: :destroy
has_many :towns, dependent: :destroy

has_many :educations, dependent: :destroy   
has_many :works, dependent: :destroy
has_many :references, dependent: :destroy
has_many :projects, dependent: :destroy 
has_many :awards, dependent: :destroy
has_many :availabilities, dependent: :destroy

accepts_nested_attributes_for :jobs, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :job_categories, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :companies, reject_if: :all_blank, allow_destroy: true  

accepts_nested_attributes_for :counties, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :constituencies, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :districts, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :divisions, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :wards, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :locations, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :sublocations, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :villages, reject_if: :all_blank, allow_destroy: true 
accepts_nested_attributes_for :towns, reject_if: :all_blank, allow_destroy: true 

accepts_nested_attributes_for :educations, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :works, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :references, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :projects, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :awards, reject_if: :all_blank, allow_destroy: true  
accepts_nested_attributes_for :availabilities, reject_if: :all_blank, allow_destroy: true  

#group users into male and female
def self.total_males
  where(gender: 'male').count
end
def self.total_females
  where(gender: 'female').count
end

def user_params       
	params.require(:user).permit(:first_name, :second_name, :last_name, :role, :website, :phone, :skype, :twitter, :gplus, :position, :marital_status, :gender, :bio, :date_of_birth, :avatar, :job_category_id, :county_id, :constituency_id, :district_id, :division_id, :ward_id, :location_id, :sublocation_id, :village_id, :town_id, educations_attributes: [:id, :institution, :level, :years, :details, :_destroy], works_attributes: [:id, :name, :position, :years, :location, :description, :_destroy], references_attributes: [:id, :name, :company, :position, :email, :phone, :_destroy], projects_attributes: [:id, :name, :client, :date_completed, :contribution, :_destroy], awards_attributes: [:id, :title, :description, :_destroy], availabilities_attributes: [:id, :exp_years, :industry, :qualification, :sal_expectation, :currency, :work_type, :availability, :county_id, :constituency_id, :district_id, :division_id, :ward_id, :location_id, :sublocation_id, :village_id, :town_id, :job_category_id,  :_destroy] )   
end  

enum role: [:admin, :candidate, :employer]

protected   
def confirmation_required?     
	false   
end
end





